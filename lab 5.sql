-- 1. Проаналізувати приклад універсального відношення. З'ясувати які його колонки містять надлишкові дані. 
-- Виконати нормалізацію універсального відношення, розбивши його на кілька таблиць.


-- Створення таблиці "publishers"
CREATE TABLE publishers (
  publisher_id INT PRIMARY KEY,
  publisher_name VARCHAR(100) NOT NULL
);

-- Створення таблиці "topics"
CREATE TABLE topics (
  topic_id INT PRIMARY KEY,
  topic_name VARCHAR(100) NOT NULL
);

-- Створення таблиці "categories"
CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name VARCHAR(100) NOT NULL
);

-- Створення таблиці "books"
CREATE TABLE books_info (
  N INT,
  num INT PRIMARY KEY,
  isnew VARCHAR(3) DEFAULT 'No',
  name VARCHAR(100) NOT NULL,
  price DECIMAL(10, 2) DEFAULT 0,
  publisher_id INT,
  pages INT,
  format VARCHAR(50) DEFAULT 'Unknown',
  data_ DATE,
  circulation INT,
  topic_id INT,
  category_id INT,
  FOREIGN KEY (publisher_id) REFERENCES publishers(publisher_id),
  FOREIGN KEY (topic_id) REFERENCES topics(topic_id),
  FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

-- Завантаження даних в таблицю "publishers"
INSERT INTO publishers (publisher_id, publisher_name) VALUES
  (1, 'Видавнича група BHV'),
  (2, 'Вільямс'),
  (3, 'МикроАрт'),
  (4, 'DiaSoft'),
  (5, 'ДМК'),
  (6, 'Триумф'),
  (7, 'Эком'),
  (8, 'Києво-Могилянська академія'),
  (9, 'Університет "Україна"'),
  (10, 'Вінниця: ВДТУ');

-- Завантаження даних в таблицю "topics"
INSERT INTO topics (topic_id, topic_name) VALUES
  (1, 'Використання ПК в цілому'),
  (2, 'Операційні системи'),
  (3, 'Програмування');

-- Завантаження даних в таблицю "categories"
INSERT INTO categories (category_id, category_name) VALUES
  (1, 'Підручники'),
  (2, 'Інші книги'),
  (3, 'Апаратні засоби ПК'),
  (4, 'Захист і безпека ПК'),
  (5, 'Windows 2000'),
  (6, 'Linux'),
  (7, 'Unix'),
  (8, 'Інші операційні системи'),
  (9, 'C&C++'),
  (10, 'SQL');

-- Завантаження даних в таблицю "books"
INSERT INTO books_info (N, num, isnew, name, price, publisher_id, pages, format, data_, circulation, topic_id, category_id) VALUES
  (2, 5110, 'No', 'Апаратні засоби мультимедіа. Відеосистема РС', 15.51, 1, 400, '70х100/16', '2000-07-24', 5000, 1, 1),
  (8, 4985, 'No', 'Засвой самостійно модернізацію та ремонт ПК за 24 години, 2-ге вид.', 18.90, 2, 288, '70х100/16', '2000-07-07', 5000, 1, 1),
  (9, 5141, 'No', 'Структури даних та алгоритми', 37.80, 2, 384, '70х100/16', '2000-09-29', 5000, 1, 1),
  (20, 5127, 'No', 'Автоматизація інженерно-графічних робіт', 11.58, 1, 256, '70х100/16', '2000-06-15', 5000, 1, 1),
  (31, 5111, 'No', 'Апаратні засоби мультимедіа. Відеосистема РС', 15.51, 1, 400, '70х100/16', '2000-07-24', 5000, 1, 3),
  (46, 5199, 'No', 'Залізо IBM 2001', 30.07, 3, 368, '70х100/16', '2000-12-02', 5000, 1, 3),
  (50, 3851, 'No', 'Захист інформації та безпека комп''ютерних систем', 26.00, 4, 480, '84х108/16', NULL, 5000, 1, 4),
  (58, 3932, 'No', 'Як перетворити персональний комп''ютер на вимірювальний комплекс', 7.65, 5, 144, '60х88/16', '1999-06-09', 5000, 1, 2),
  (59, 4713, 'No', 'Plug-ins. Додаткові програми для музичних програм', 11.41, 5, 144, '70х100/16', '2000-02-22', 5000, 1, 2),
  (175, 5217, 'No', 'Windows МЕ. Найновіші версії програм', 16.57, 6, 320, '70х100/16', '2000-08-25', 5000, 2, 5),
  (176, 4829, 'No', 'Windows 2000 Professional крок за кроком з CD', 27.25, 7, 320, '70х100/16', '2000-04-28', 5000, 2, 5),
  (188, 5170, 'No', 'Linux версії', 24.43, 5, 346, '70х100/16', '2000-09-29', 5000, 2, 6),
  (191, 860, 'No', 'Операційна система UNIX', 3.50, 1, 395, '84х100\16', '1997-05-05', 5000, 2, 7),
  (203, 44, 'No', 'Відповіді на актуальні запитання щодо OS/2 Warp', 5.00, 4, 352, '60х84/16', '1996-03-20', 5000, 2, 8),
  (206, 5176, 'No', 'Windows Ме. Супутник користувача', 12.79, 1, 306, '', '2000-10-10', 5000, 2, 8),
  (209, 5462, 'No', 'Мова програмування С++. Лекції та вправи', 29.00, 4, 656, '84х108/16', '2000-12-12', 5000, 3, 9),
  (210, 4982, 'No', 'Мова програмування С. Лекції та вправи', 29.00, 4, 432, '84х108/16', '2000-07-12', 5000, 3, 9),
  (220, 4687, 'No', 'Ефективне використання C++ .50 рекомендацій щодо покращення ваших програм та проектів', 17.60, 5, 240, '70х100/16', '2000-02-03', 5000, 3, 9),
  (222, 235, 'No', 'Інформаційні системи і структури даних', NULL, 8, 288, '60х90/16', NULL, 400, 1, 2),
  (225, 8746, 'Yes', 'Бази даних в інформаційних системах', NULL, 9, 418, '60х84/16', '2018-07-25', 100, 3, 10),
  (226, 2154, 'Yes', 'Сервер на основі операційної системи FreeBSD 6.1', 0, 9, 216, '60х84/16', '2015-03-11', 500, 3, 8),
  (245, 2662, 'No', 'Організація баз даних та знань', 0, 10, 208, '60х90/16', '2001-10-10', 1000, 3, 10),
  (247, 5641, 'Yes', 'Організація баз даних та знань', 0, 1, 384, '70х100/16', '2021-12-15', 5000, 3, 10)
;



-- 2. Скласти SQL-script, що виконує:
--   a. Створення таблиць бази даних. Команди для створення таблиці повинні містити головний ключ, обмеження типу null / not null, default, check,
--   створення зв'язків з умовами посилальної цілісності
--   b. Завантаження даних в таблиці


-- 3. Побудувати діаграму зв'язків таблиць бази даних використовуючи інструмент Designer.


-- 4. Створити зв’язки в базі даних між таблицями.
--   a. Вивчити роботу створення зв’язків між таблицями в полі Designer
--   b. Створити майстром e Designer кілька варіантів зв’язків у базі даних
--   c. Проаналізувати і пояснити особливості зв’язків, створених Designer
--   d. Порівняти з тими, що написані самостійно.
--   e. Зробити висновки

-- в даному випадку спостерігається звʼязок один до одного, бо одному екземпляру однієї сутності відповідає один екземпляр іншої сутності.
-- Перша нормальна форма 1NF

-- 5. Створити і перевірити представлення для отримання універсального відношення з набору нормалізованих таблиць бази даних.